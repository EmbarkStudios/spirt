module.dialect = spv.Module(version: 1.3, spv.Capability.Shader, spv.MemoryModel.GLSL450)

module.debug_info = spv.Module.DebugInfo(generator: spv.Tool(id: 7))

#[spv.Decoration.Flat]
#[spv.Decoration.Location(Location: 0)]
global_var GV0 in spv.StorageClass.Output: s32

func F0() -> spv.OpTypeVoid {
  loop(v0: s32 <- 1s32, v1: s32 <- 1s32) {
    v2 = spv.OpSLessThan(v1, 10s32): bool
    (v3: bool, v4: s32, v5: s32, _: bool) = if v2 {
      v6 = spv.OpIMul(v0, v1): s32
      v7 = spv.OpIAdd(v1, 1s32): s32
      (true, v6, v7, false)
    } else {
      (false, spv.OpUndef: s32, spv.OpUndef: s32, true)
    }
    (v4, v5) -> (v0, v1)
  } while v3
  spv.OpStore(Pointer: &GV0, Object: v0)
}

export {
  spv.OpEntryPoint(spv.ExecutionModel.Vertex, Name: "main"): F0,
}